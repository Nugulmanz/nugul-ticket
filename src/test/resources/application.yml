spring:
  datasource:
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  data:
    redis:
      port: 6379
      host: localhost

  thymeleaf:
    suffix: .html

  servlet:
    multipart:
      enabled: true
      max-file-size: 5MB
      max-request-size: 5MB

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
  profiles:
    active: local

  application:
    name: nugul-ticket

aws:
  opensearch:
    endpoint: ${AWS_OPENSEARCH_ENDPOINT}

jwt:
  secret:
    key: ${JWT_SECRET_KEY}
  admin-key: ${ADMIN_KEY}

client:
  id: ${CLIENT_ID}

cloud:
  aws:
    s3:
      bucket: nugulticket
      credentials:
        access-key: ${S3_ACCESS_KEY}
        secret-key: ${S3_SECRET_KEY}
    region:
      static: ${S3_REGION}
    stack:
      auto: false

    cloudfront:
      domain: ${CLOUDFRONT_DOMAIN}


    sqs:
      region:
        static: ${SQS_REGION}
      credentials:
        access-key: ${SQS_ACCESS_KEY}
        secret-key: ${SQS_SECRET_KEY}
      name: NugulTicket.fifo
      url: ${SQS_TICKETS_URL}
      url-realtime: ${SQS_REALTIME_URL}

    sns:
      region:
        static: ${SQS_REGION}
      payment:
        topic:
          arn: ${SNS_PAYMENT_TOPIC}

email:
  host: smtp.naver.com
  port: 465
  setForm: ${NAVER_EMAIL_USERNAME} # 발신자 이메일 주소
  password: ${NAVER_EMAIL_PASSWORD} #발신자 비밀번호

  properties:
    mail:
      smtp:
        auth: true
        ssl:
          enable: true # SSL 활성화

payment:
  url: ${PAYMENT_URL}

openai:
  api:
    key: ${OPENAI_API_KEY} # 환경 변수로 설정된 OpenAI API Key
    url: https://api.openai.com/v1/chat/completions
    model: gpt-3.5-turbo # 사용할 모델 (필요에 따라 변경 가능)
grpc:
  server:
    port: 50051
  payment:
    url: ${GRPC_PAYMENT_URL}

management:
  endpoints:
    web:
      exposure:
        include: "*"

  security:
    enabled: false
